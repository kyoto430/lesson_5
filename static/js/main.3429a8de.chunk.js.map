{"version":3,"sources":["reportWebVitals.js","app/components/ui/navBar.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/loader.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/utils/formatDate.js","app/components/ui/comment.jsx","app/components/ui/comments.jsx","app/utils/validator.js","app/components/common/form/selectField.jsx","app/components/common/form/textAreaField.jsx","app/components/ui/commentForm.jsx","app/components/ui/userCard.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/form/textField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/form/editForm.jsx","app/components/page/editPage/editPage.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/ui/searchBar.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/common/pagination.jsx","app/components/page/usersListPage/userList.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/layouts/main.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","className","to","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","professions","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","data","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","console","log","Loader","Quality","Qualities","Array","isArray","Object","keys","map","quality","qual","addZero","num","String","getMonth","index","formatDate","date","Number","diff","year","getFullYear","month","day","getDate","hours","getHours","min","getMinutes","round","test","Comment","comment","author","src","substring","alt","width","height","onClick","Comments","useState","setNewComments","useEffect","length","sortedComments","sort","a","b","validator","config","errors","validate","validateMethod","statusValidate","trim","value","message","fieldName","error","SelectField","label","onChange","defaultOption","options","optionsArray","key","htmlFor","target","disabled","option","TextAreaField","rows","CommentForm","setData","setErrors","handleChange","prevState","validatorConfig","isRequired","isValid","UserCard","setUsers","setComments","role","UserPage","useParams","setUser","TextField","type","showPassword","setShowPassword","defaultProps","RadioField","checked","MultiSelectField","defaultValue","optionName","closeMenuOnSelect","isMulti","classNamePrefix","placeholder","EditForm","history","useHistory","setQualities","setProfessions","api","isEmail","goBack","onSubmit","e","preventDefault","qualityIds","updatedQualities","values","includes","updatedData","EditPage","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","slice","indexOf","renderPhrase","SearchBar","search","onItemSearch","BookMark","status","rest","TableBody","columns","renderContent","column","component","_","get","path","TableHeader","onSort","selectedSort","renderSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","delete","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","range","page","UserList","setCurrentPage","setProfession","selectedProf","setSelectedProf","sortBy","setSortBy","setSearch","searchedUsers","toLowerCase","filteredUsers","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","pageIndex","Users","edit","Main","CheckBoxField","LoginForm","password","stayOn","isCapitalSymbol","isContainDigit","RegisterForm","licence","Login","formType","setFormType","toggleFormType","params","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3429a8de.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <ul className=\"nav\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                    Main Page\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/users\">\r\n                    Users\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professions);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"johndorian@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"koks@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bobkelso@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"rachelgreene@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"sheldoncooper@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"leonardhofstedter@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"howardwolowitz@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"nikolatesla@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"monicageller@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatouille@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joeytribbiani@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"bradpitt@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return <h1>Loading...</h1>;\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Quality = ({ color, name, _id }) => {\r\n    return (\r\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\r\n            {name}\r\n        </span>\r\n    );\r\n};\r\nQuality.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Quality;\r\n","import Qualities from \"./qualitiesList\";\r\nexport default Qualities;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Quality from \"./quality\";\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n    return (\r\n        <>\r\n            {!Array.isArray(qualities) &&\r\n                Object.keys(qualities).map((quality) => (\r\n                    <Quality key={qualities[quality]._id} {...quality} />\r\n                ))}\r\n            {qualities.map((qual) => (\r\n                <Quality key={qual._id} {...qual} />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n    qualities: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","const addZero = (num) => {\r\n    return num < 10 ? \"0\" + String(num) : String(num);\r\n};\r\n\r\nconst formatPhrase = (num) => {\r\n    if (String(num)[0] === \"1\" && (num < 10 || num > 20)) return \"минута\";\r\n    if (/[234]$/.test(String(num)) && (num < 10 || num > 20)) return \"минуты\";\r\n\r\n    return \"минут\";\r\n};\r\n\r\nconst getMonth = (index) => {\r\n    const months = [\r\n        \"января\",\r\n        \"февраля\",\r\n        \"марта\",\r\n        \"апреля\",\r\n        \"мая\",\r\n        \"июня\",\r\n        \"июля\",\r\n        \"августа\",\r\n        \"сентября\",\r\n        \"октября\",\r\n        \"ноября\",\r\n        \"декабря\"\r\n    ];\r\n\r\n    return months[index];\r\n};\r\n\r\nconst formatDate = (date) => {\r\n    date = typeof date === \"number\" ? date : Number(date);\r\n    const diff = Date.now() - date;\r\n    const year = new Date(date).getFullYear();\r\n    const month = new Date(date).getMonth();\r\n    const day = new Date(date).getDate();\r\n    const hours = new Date(date).getHours();\r\n    const min = new Date(date).getMinutes();\r\n\r\n    if (diff < 60000) {\r\n        return \"меньше минуты назад\";\r\n    } else if (diff <= 1.8e6) {\r\n        const min = Math.round(diff / 60000);\r\n        return `${min} ${formatPhrase(min)} назад`;\r\n    } else if (diff < 8.64e7) {\r\n        return `${addZero(hours)}:${addZero(min)}`;\r\n    } else if (diff < 3.154e10) {\r\n        return `${addZero(day)} ${getMonth(month)}`;\r\n    } else {\r\n        return `${addZero(day)} ${getMonth(month)} ${year} года`;\r\n    }\r\n};\r\n\r\nexport default formatDate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport formatDate from \"../../utils/formatDate\";\r\n\r\nconst Comment = ({ comment, remove }) => {\r\n    const { _id, author, date, content } = comment;\r\n    return (\r\n        <div className=\"bg-light card-body  mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"d-flex flex-start \">\r\n                        <img\r\n                            src={`https://avatars.dicebear.com/api/avataaars/${(\r\n                                Math.random() + 1\r\n                            )\r\n                                .toString(36)\r\n                                .substring(7)}.svg`}\r\n                            className=\"rounded-circle shadow-1-strong me-3\"\r\n                            alt=\"avatar\"\r\n                            width=\"65\"\r\n                            height=\"65\"\r\n                        />\r\n                        <div className=\"flex-grow-1 flex-shrink-1\">\r\n                            <div className=\"mb-4\">\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <p className=\"mb-1 \">\r\n                                        {author}\r\n                                        <span className=\"small\">\r\n                                            | {formatDate(date)}\r\n                                        </span>\r\n                                    </p>\r\n                                    <button\r\n                                        onClick={() => remove(_id)}\r\n                                        className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                                    >\r\n                                        <i className=\"bi bi-x-lg\"></i>\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"small mb-0\">{content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nComment.propTypes = {\r\n    comment: PropTypes.object.isRequired,\r\n    remove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"../common/loader\";\r\nimport Comment from \"./comment\";\r\n\r\nconst Comments = ({ users, comments, remove }) => {\r\n    const [newComments, setNewComments] = useState();\r\n    useEffect(() => {\r\n        if (comments) {\r\n            const newComments = comments.map((comment) => ({\r\n                _id: comment._id,\r\n                content: comment.content,\r\n                date: comment.created_at,\r\n                author: users.find((user) => user._id === comment.userId).name\r\n            }));\r\n            setNewComments(newComments);\r\n        }\r\n    }, [comments]);\r\n    if (!comments.length) return null;\r\n\r\n    if (!newComments) return <Loader />;\r\n\r\n    const sortedComments = newComments.sort((a, b) => b.date - a.date);\r\n\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <h2>Комментарии</h2>\r\n                <hr />\r\n                {sortedComments.map((comment) => (\r\n                    <Comment\r\n                        key={comment._id}\r\n                        comment={comment}\r\n                        remove={remove}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nComments.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    remove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Comments;\r\n","/* eslint-disable indent */\r\nexport function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n            case \"isRequired\": {\r\n                if (typeof data === \"boolean\") {\r\n                    statusValidate = !data;\r\n                } else {\r\n                    statusValidate = data.trim() === \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"isEmail\": {\r\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n                statusValidate = !emailRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isCapitalSymbol\": {\r\n                const capitalRegExp = /[A-Z]+/g;\r\n                statusValidate = !capitalRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isContainDigit\": {\r\n                const digitRegExp = /\\d+/g;\r\n                statusValidate = !digitRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"min\": {\r\n                statusValidate = data.length < config.value;\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","/* eslint-disable indent */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n    label,\r\n    name,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error\r\n}) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((key) => ({\r\n                  _id: options[key]._id,\r\n                  name: options[key].name\r\n              }))\r\n            : options;\r\n\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                onChange={handleChange}\r\n                value={value}\r\n                className={`form-select${error ? \" is-invalid\" : \"\"}`}\r\n                name={name}\r\n                id=\"validationCustom04\"\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray &&\r\n                    optionsArray.map((option) => (\r\n                        <option key={option._id} value={option._id}>\r\n                            {option.name}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectField.propTypes = {\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    data: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    defaultOption: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaField = ({ label, name, value, rows, onChange, error }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <label htmlFor={name} className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <textarea\r\n                onChange={handleChange}\r\n                className={`form-control${error ? \" is-invalid\" : \"\"}`}\r\n                name={name}\r\n                id={name}\r\n                value={value}\r\n                rows={rows}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    rows: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextAreaField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport TextAreaField from \"../common/form/textAreaField\";\r\n\r\nconst CommentForm = ({ id, users, add }) => {\r\n    const [data, setData] = useState({ comment: \"\", user: \"\" });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        comment: {\r\n            isRequired: {\r\n                message: \"Поле сообщение не может быть пустым\"\r\n            },\r\n            min: {\r\n                message: \"Сообщение должно содержать не менее 3 символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        user: {\r\n            isRequired: {\r\n                message: \"Выберите имя пользователя\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const clear = () => {\r\n        setData({ comment: \"\", user: \"\" });\r\n    };\r\n\r\n    const handleTextArea = () => {\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const comment = {\r\n            userId: data.user,\r\n            pageId: id,\r\n            content: data.comment\r\n        };\r\n\r\n        add(comment);\r\n        clear();\r\n    };\r\n\r\n    return (\r\n        <div className=\"card mb-2\">\r\n            <div className=\"card-body\">\r\n                <div>\r\n                    <h2>Новый комментарий</h2>\r\n                    <SelectField\r\n                        label=\"\"\r\n                        defaultOption=\"Выбрать...\"\r\n                        options={users}\r\n                        name=\"user\"\r\n                        onChange={handleChange}\r\n                        value={data.user}\r\n                        error={errors.user}\r\n                    />\r\n                    <TextAreaField\r\n                        onChange={handleChange}\r\n                        label=\"Сообщение\"\r\n                        name=\"comment\"\r\n                        value={data.comment}\r\n                        error={errors.comment}\r\n                        rows=\"3\"\r\n                    />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <button\r\n                            onClick={handleTextArea}\r\n                            className=\"btn btn-primary\"\r\n                            disabled={!isValid}\r\n                        >\r\n                            Опубликовать\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    add: PropTypes.func\r\n};\r\n\r\nexport default CommentForm;\r\n","/* eslint-disable multiline-ternary */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../../api\";\r\nimport Qualities from \"./qualities\";\r\nimport Loader from \"../common/loader\";\r\nimport Comments from \"./comments\";\r\nimport CommentForm from \"./commentForm\";\r\n\r\nconst UserCard = ({ user }) => {\r\n    const [users, setUsers] = useState();\r\n    const [comments, setComments] = useState();\r\n    const { _id, name, profession, rate, completedMeetings, qualities } = user;\r\n    useEffect(() => {\r\n        API.users.fetchAll().then((data) => setUsers(data));\r\n        API.comments\r\n            .fetchCommentsForUser(_id)\r\n            .then((data) => setComments(data));\r\n    }, []);\r\n    const addComment = (comment) => {\r\n        API.comments.add(comment);\r\n        API.comments\r\n            .fetchCommentsForUser(_id)\r\n            .then((data) => setComments(data));\r\n    };\r\n    const removeComment = (id) => {\r\n        API.comments.remove(id);\r\n        API.comments\r\n            .fetchCommentsForUser(_id)\r\n            .then((data) => setComments(data));\r\n    };\r\n    console.log(\"users\", users);\r\n    console.log(\"user\", user);\r\n    console.log(\"comments\", comments);\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row gutters-sm\">\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Link\r\n                                    to={`/users/${_id}/edit`}\r\n                                    className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n                                >\r\n                                    <i className=\"bi bi-gear\"></i>\r\n                                </Link>\r\n                                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n                                    <img\r\n                                        src={`https://avatars.dicebear.com/api/avataaars/${(\r\n                                            Math.random() + 1\r\n                                        )\r\n                                            .toString(36)\r\n                                            .substring(7)}.svg`}\r\n                                        className=\"rounded-circle shadow-1-strong me-3\"\r\n                                        alt=\"avatar\"\r\n                                        width=\"65\"\r\n                                        height=\"65\"\r\n                                    />\r\n                                    <div className=\"mt-3\">\r\n                                        <h4>{name}</h4>\r\n                                        <p className=\"text-secondary mb-1\">\r\n                                            {profession.name}\r\n                                        </p>\r\n                                        <div className=\"text-muted\">\r\n                                            <i\r\n                                                className=\"bi bi-caret-down-fill text-primary\"\r\n                                                role=\"button\"\r\n                                            ></i>\r\n                                            <i\r\n                                                className=\"bi bi-caret-up text-secondary\"\r\n                                                role=\"button\"\r\n                                            ></i>\r\n                                            <span className=\"ms-2\">{rate}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                                    <h5 className=\"card-title\">\r\n                                        <span>Качества</span>\r\n                                    </h5>\r\n                                    <Qualities qualities={qualities} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                                    <h5 className=\"card-title\">\r\n                                        <span>Завершенные встречи</span>\r\n                                    </h5>\r\n\r\n                                    <h1 className=\"display-1\">\r\n                                        {completedMeetings}\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        Комментарии\r\n                        {users ? (\r\n                            <CommentForm\r\n                                id={_id}\r\n                                users={users}\r\n                                add={addComment}\r\n                            />\r\n                        ) : (\r\n                            <Loader />\r\n                        )}\r\n                        {users && comments ? (\r\n                            <Comments\r\n                                id={_id}\r\n                                users={users}\r\n                                comments={comments}\r\n                                remove={removeComment}\r\n                            />\r\n                        ) : (\r\n                            <Loader />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nUserCard.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default UserCard;\r\n","import UserPage from \"./userPage\";\r\nexport default UserPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../../api\";\r\nimport Loader from \"../../common/loader\";\r\nimport UserCard from \"../../ui/userCard\";\r\n\r\nconst UserPage = () => {\r\n    const { userId } = useParams();\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {\r\n        API.users.getById(userId).then((user) => setUser(user));\r\n    }, []);\r\n    return <>{user ? <UserCard user={user} /> : <Loader />}</>;\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    type={showPassword ? \"text\" : type}\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={getInputClasses()}\r\n                />\r\n                {type === \"password\" && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <i\r\n                            className={\r\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\r\n                            }\r\n                        ></i>\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextField.defaultProps = {\r\n    type: \"text\"\r\n};\r\n\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={option.name + \"_\" + option.value}\r\n                        className=\"form-check form-check-inline\"\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={option.name + \"_\" + option.value}\r\n                            value={option.value}\r\n                            checked={option.value === value}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={option.name + \"_\" + option.value}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRadioField.propTypes = {\r\n    options: PropTypes.array,\r\n    name: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","/* eslint-disable indent */\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiSelectField = ({\r\n    options,\r\n    onChange,\r\n    name,\r\n    label,\r\n    defaultOption,\r\n    defaultValue\r\n}) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  label: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n    const handleChange = (value) => {\r\n        onChange({ name: name, value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <Select\r\n                closeMenuOnSelect={false}\r\n                isMulti\r\n                options={optionsArray}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n                placeholder={defaultOption}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultOption: PropTypes.string,\r\n    defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport api from \"../../../api\";\r\nimport TextField from \"./textField\";\r\nimport SelectField from \"./selectField\";\r\nimport RadioField from \"./radioField\";\r\nimport MultiSelectField from \"./multiSelectField\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst EditForm = ({ user }) => {\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        name: user.name,\r\n        email: user.email || \"\",\r\n        profession: user.profession._id,\r\n        sex: user.sex || \"male\",\r\n        qualities: user.qualities.map((quality) => ({\r\n            value: quality._id,\r\n            label: quality.name\r\n        }))\r\n    });\r\n\r\n    const [qualities, setQualities] = useState();\r\n    const [professions, setProfessions] = useState();\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        api.professions.fetchAll().then((data) => setProfessions(data));\r\n        api.qualities.fetchAll().then((data) => setQualities(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Имя обязателено для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Имя должно содержать не менее 3 символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен не корректно\"\r\n            }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: \"Пoле выбора профессии обязателено для заполнения\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n\r\n        const [profession] = professions.filter(\r\n            (profession) => profession._id === data.profession\r\n        );\r\n        const qualityIds = data.qualities.map((quality) => quality.value);\r\n        const updatedQualities = Object.values(qualities).filter((quality) =>\r\n            qualityIds.includes(quality._id)\r\n        );\r\n        const updatedData = {\r\n            ...data,\r\n            profession,\r\n            qualities: updatedQualities\r\n        };\r\n        api.users.update(user._id, updatedData);\r\n\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <button\r\n                onClick={() => history.goBack()}\r\n                className=\"btn btn-primary pe-4\"\r\n                disabled={!professions}\r\n            >\r\n                <i className=\"bi bi-caret-left\"></i>Назад\r\n            </button>\r\n            <h1>Редактировать</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Имя\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <TextField\r\n                    label=\"Электронная почта\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    error={errors.email}\r\n                />\r\n                <SelectField\r\n                    onChange={handleChange}\r\n                    options={professions}\r\n                    defaultOption=\"Choose...\"\r\n                    error={errors.profession}\r\n                    value={data.profession}\r\n                    label=\"Выбери свою профессию\"\r\n                />\r\n                <RadioField\r\n                    options={[\r\n                        { name: \"Male\", value: \"male\" },\r\n                        { name: \"Female\", value: \"female\" },\r\n                        { name: \"Other\", value: \"other\" }\r\n                    ]}\r\n                    value={data.sex}\r\n                    name=\"sex\"\r\n                    onChange={handleChange}\r\n                    label=\"Выберите ваш пол\"\r\n                />\r\n                <MultiSelectField\r\n                    name=\"qualities\"\r\n                    label=\"Выберите качества\"\r\n                    defaultOption=\"Выбрать...\"\r\n                    defaultValue={data.qualities}\r\n                    options={qualities}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary w-100 mx-auto\"\r\n                    disabled={!isValid || !professions}\r\n                >\r\n                    Обновить\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nEditForm.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport api from \"../../../api\";\r\nimport EditForm from \"../../common/form/editForm\";\r\nimport Loader from \"../../common/loader\";\r\n\r\nconst EditPage = () => {\r\n    const { userId } = useParams();\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {\r\n        api.users.getById(userId).then((data) => setUser(data));\r\n    }, []);\r\n\r\n    return <>{user ? <EditForm user={user} /> : <Loader />}</>;\r\n};\r\n\r\nexport default EditPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupList = ({\r\n    items,\r\n    valueProperty,\r\n    contentProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n}) => {\r\n    console.log(items);\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {!Array.isArray(items) &&\r\n                Object.keys(items).map((item) => (\r\n                    <li\r\n                        key={items[item][valueProperty]}\r\n                        className={\r\n                            \"list-group-item\" +\r\n                            (items[item] === selectedItem ? \" active\" : \"\")\r\n                        }\r\n                        onClick={() => onItemSelect(items[item])}\r\n                        role=\"button\"\r\n                    >\r\n                        {items[item][contentProperty]}\r\n                    </li>\r\n                ))}\r\n            {items.map((item) => (\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    className={\r\n                        \"list-group-item\" +\r\n                        (item === selectedItem ? \" active\" : \"\")\r\n                    }\r\n                    onClick={() => onItemSelect(item)}\r\n                    role=\"button\"\r\n                >\r\n                    {item[contentProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nGroupList.defaultProps = {\r\n    valueProperty: \"_id\",\r\n    contentProperty: \"name\"\r\n};\r\nGroupList.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.object\r\n};\r\nexport default GroupList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst SearchStatus = ({ length }) => {\r\n    const renderPhrase = (number) => {\r\n        const lastOne = Number(number.toString().slice(-1));\r\n        if (number > 4 && number < 15) {\r\n            return \"человек тусанет\";\r\n        }\r\n        if (lastOne === 1) return \"человек тусанет\";\r\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\r\n        return \"человек тусанет\";\r\n    };\r\n    return (\r\n        <h2>\r\n            <span\r\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\r\n            >\r\n                {length > 0\r\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\r\n                    : \"Никто с тобой не тусанет\"}\r\n            </span>\r\n        </h2>\r\n    );\r\n};\r\nSearchStatus.propTypes = {\r\n    length: PropTypes.number\r\n};\r\n\r\nexport default SearchStatus;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBar = ({ search, onItemSearch }) => {\r\n    return (\r\n        <>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Поиск</span>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    value={search}\r\n                    onChange={onItemSearch}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    search: PropTypes.string,\r\n    onItemSearch: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst BookMark = ({ status, ...rest }) => {\r\n    return (\r\n        <button {...rest}>\r\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\r\n        </button>\r\n    );\r\n};\r\nBookMark.propTypes = {\r\n    status: PropTypes.bool\r\n};\r\n\r\nexport default BookMark;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n    const renderContent = (item, column) => {\r\n        if (columns[column].component) {\r\n            const component = columns[column].component;\r\n            if (typeof component === \"function\") {\r\n                return component(item);\r\n            }\r\n            return component;\r\n        }\r\n        return _.get(item, columns[column].path);\r\n    };\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => (\r\n                <tr key={item._id}>\r\n                    {Object.keys(columns).map((column) => (\r\n                        <td key={column}>{renderContent(item, column)}</td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ path: item, order: \"asc\" });\r\n        }\r\n    };\r\n    const renderSortArrow = (selectedSort, currentPath) => {\r\n        if (selectedSort.path === currentPath) {\r\n            if (selectedSort.order === \"asc\") {\r\n                return <i className=\"bi bi-caret-down-fill\"></i>;\r\n            } else {\r\n                return <i className=\"bi bi-caret-up-fill\"></i>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].path\r\n                                ? () => handleSort(columns[column].path)\r\n                                : undefined\r\n                        }\r\n                        {...{ role: columns[column].path && \"button\" }}\r\n                        scope=\"col\"\r\n                    >\r\n                        {columns[column].name}\r\n                        {renderSortArrow(selectedSort, columns[column].path)}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport Table from \"./table\";\r\nexport { TableBody, TableHeader };\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n    return (\r\n        <table className=\"table\">\r\n            {children || (\r\n                <>\r\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\r\n                    <TableBody {...{ columns, data }} />\r\n                </>\r\n            )}\r\n        </table>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    onSort: PropTypes.func,\r\n    selectedSort: PropTypes.object,\r\n    columns: PropTypes.object,\r\n    data: PropTypes.array,\r\n    children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookMark from \"../common/bookmark\";\r\nimport Qualities from \"./qualities\";\r\nimport Table from \"../common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserTable = ({\r\n    users,\r\n    onSort,\r\n    selectedSort,\r\n    onToggleBookMark,\r\n    onDelete,\r\n    ...rest\r\n}) => {\r\n    const columns = {\r\n        name: {\r\n            path: \"name\",\r\n            name: \"Имя\",\r\n            component: (user) => (\r\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\r\n            )\r\n        },\r\n        qualities: {\r\n            name: \"Качества\",\r\n            component: (user) => <Qualities qualities={user.qualities} />\r\n        },\r\n        professions: { path: \"profession.name\", name: \"Профессия\" },\r\n        completedMeetings: {\r\n            path: \"completedMeetings\",\r\n            name: \"Встретился, раз\"\r\n        },\r\n        rate: { path: \"rate\", name: \"Оценка\" },\r\n        bookmark: {\r\n            path: \"bookmark\",\r\n            name: \"Избранное\",\r\n            component: (user) => (\r\n                <BookMark\r\n                    status={user.bookmark}\r\n                    onClick={() => onToggleBookMark(user._id)}\r\n                />\r\n            )\r\n        },\r\n        delete: {\r\n            component: (user) => (\r\n                <button\r\n                    onClick={() => onDelete(user._id)}\r\n                    className=\"btn btn-danger\"\r\n                >\r\n                    delete\r\n                </button>\r\n            )\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Table\r\n                onSort={onSort}\r\n                selectedSort={selectedSort}\r\n                columns={columns}\r\n                data={users}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nUserTable.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    onToggleBookMark: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n    console.log({ currentPage });\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    if (pagesCount === 1) return null;\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => (\r\n                    <li\r\n                        key={page}\r\n                        className={\r\n                            \"page-item \" +\r\n                            (page === currentPage ? \"active\" : \"\")\r\n                        }\r\n                    >\r\n                        <a\r\n                            className=\"page-link\"\r\n                            onClick={() => {\r\n                                onPageChange(page);\r\n                            }}\r\n                        >\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","/* eslint-disable indent */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport API from \"../../../api\";\r\nimport _ from \"lodash\";\r\nimport { paginate } from \"../../../utils/paginate\";\r\nimport GroupList from \"../../common/groupList\";\r\nimport SearchStatus from \"../../ui/searchStatus\";\r\nimport SearchBar from \"../../ui/searchBar\";\r\nimport UserTable from \"../../ui/usersTable\";\r\nimport Pagination from \"../../common/pagination\";\r\nimport Loader from \"../../common/loader\";\r\n\r\nconst UserList = () => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [professions, setProfession] = useState();\r\n    const [selectedProf, setSelectedProf] = useState();\r\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\r\n    const pageSize = 8;\r\n\r\n    const [users, setUsers] = useState();\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n        setSelectedProf();\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"send request users\");\r\n        API.users.fetchAll().then((data) => {\r\n            setUsers(data);\r\n        });\r\n    }, []);\r\n\r\n    const handleDelete = (userId) => {\r\n        setUsers(users.filter((user) => user._id !== userId));\r\n    };\r\n    const handleToggleBookMark = (id) => {\r\n        setUsers(\r\n            users.map((user) => {\r\n                if (user._id === id) {\r\n                    return { ...user, bookmark: !user.bookmark };\r\n                }\r\n                return user;\r\n            })\r\n        );\r\n        console.log(id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"send reqest professions\");\r\n        API.professions.fetchAll().then((data) => {\r\n            setProfession(data);\r\n        });\r\n        return () => {};\r\n    }, []);\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedProf]);\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [search]);\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n        console.log(\"page: \", pageIndex);\r\n    };\r\n    const handleProfessionSelect = (item) => {\r\n        console.log(\"prof select\", item);\r\n        setSelectedProf(item);\r\n        setSearch(\"\");\r\n    };\r\n    const handleSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n\r\n    if (users) {\r\n        const searchedUsers = users.filter((user) => {\r\n            return user.name.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n        const filteredUsers = selectedProf\r\n            ? users.filter(\r\n                  (user) =>\r\n                      JSON.stringify(user.profession) ===\r\n                      JSON.stringify(selectedProf)\r\n              )\r\n            : searchedUsers;\r\n\r\n        const count = filteredUsers.length;\r\n        const sortedUsers = _.orderBy(\r\n            filteredUsers,\r\n            [sortBy.path],\r\n            [sortBy.order]\r\n        );\r\n\r\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n        const clearFilter = () => {\r\n            setSelectedProf();\r\n        };\r\n        return (\r\n            <div className=\"d-flex\">\r\n                {professions && (\r\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n                        <GroupList\r\n                            selectedItem={selectedProf}\r\n                            items={professions}\r\n                            onItemSelect={handleProfessionSelect}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-secondary mt-2\"\r\n                            onClick={clearFilter}\r\n                        >\r\n                            Очистить\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                <div className=\"d-flex flex-column\">\r\n                    <SearchStatus length={count} />\r\n                    <SearchBar search={search} onItemSearch={handleChange} />\r\n                    {count > 0 && (\r\n                        <UserTable\r\n                            users={usersCrop}\r\n                            onSort={handleSort}\r\n                            selectedSort={sortBy}\r\n                            onDelete={handleDelete}\r\n                            onToggleBookMark={handleToggleBookMark}\r\n                        />\r\n                    )}\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            itemsCount={count}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <Loader />;\r\n};\r\n\r\nexport default UserList;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","/* eslint-disable multiline-ternary */\r\nimport React from \"react\";\r\nimport UserPage from \"../components/page/userPage\";\r\nimport { useParams } from \"react-router\";\r\nimport EditPage from \"../components/page/editPage/editPage\";\r\nimport UserList from \"../components/page/usersListPage/userList\";\r\n\r\nconst Users = () => {\r\n    const { userId, edit } = useParams();\r\n    return (\r\n        <>\r\n            {userId && edit ? (\r\n                <EditPage />\r\n            ) : userId ? (\r\n                <UserPage />\r\n            ) : (\r\n                <UserList />\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n    return <h1>Main page</h1>;\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n    const handleChange = () => {\r\n        onChange({ name: name, value: !value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"form-check mb-4\">\r\n            <input\r\n                className={getInputClasses()}\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id={name}\r\n                onChange={handleChange}\r\n                checked={value}\r\n            />\r\n            <label className=\"form-check-label \" htmlFor=\"flexCheckDefault\">\r\n                {children}\r\n            </label>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]),\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\nimport TextField from \"../common/form/textField\";\r\n\r\nconst LoginForm = () => {\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        stayOn: false\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n                value={data.stayOn}\r\n                onChange={handleChange}\r\n                name=\"stayOn\"\r\n            >\r\n                Оставаться в системе\r\n            </CheckBoxField>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport api from \"../../api\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport RadioField from \"../common/form/radioField\";\r\nimport MultiSelectField from \"../common/form/multiSelectField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\n\r\nconst RegisterForm = () => {\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        profession: \"\",\r\n        sex: \"male\",\r\n        qualities: [],\r\n        licence: false\r\n    });\r\n    const [qualities, setQualities] = useState({});\r\n    const [professions, setProfession] = useState();\r\n    const [errors, setErrors] = useState({});\r\n    useEffect(() => {\r\n        console.log(\"send reqest professions\");\r\n        api.professions.fetchAll().then((data) => {\r\n            setProfession(data);\r\n        });\r\n        api.qualities.fetchAll().then((data) => {\r\n            setQualities(data);\r\n        });\r\n        return () => {};\r\n    }, []);\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: \"Обязательно выберите вашу профессию\"\r\n            }\r\n        },\r\n        licence: {\r\n            isRequired: {\r\n                message:\r\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <SelectField\r\n                onChange={handleChange}\r\n                options={professions}\r\n                defaultOption=\"Choose...\"\r\n                error={errors.profession}\r\n                value={data.profession}\r\n                label=\"Выбери свою профессию\"\r\n            />\r\n            <RadioField\r\n                options={[\r\n                    { name: \"Male\", value: \"male\" },\r\n                    { name: \"Female\", value: \"female\" },\r\n                    { name: \"Other\", value: \"other\" }\r\n                ]}\r\n                value={data.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"ВЫьеретие ваш пол\"\r\n            />\r\n            <MultiSelectField\r\n                options={qualities}\r\n                onChange={handleChange}\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n            />\r\n            <CheckBoxField\r\n                value={data.licence}\r\n                onChange={handleChange}\r\n                name=\"licence\"\r\n                error={errors.licence}\r\n            >\r\n                Подтвердить <a>лицензионное соглашение</a>\r\n            </CheckBoxField>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","/* eslint-disable multiline-ternary */\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport LoginForm from \"../components/ui/loginForm\";\r\nimport RegisterForm from \"../components/ui/registerForm\";\r\n\r\nconst Login = () => {\r\n    const { type } = useParams();\r\n    const [formType, setFormType] = useState(\r\n        type === \"register\" ? type : \"login\"\r\n    );\r\n    const toggleFormType = (params) => {\r\n        setFormType((prevState) =>\r\n            prevState === \"register\" ? \"login\" : \"register\"\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {formType === \"register\" ? (\r\n                        <>\r\n                            <h3 className=\"mb-4\">Register</h3>\r\n                            <RegisterForm />\r\n                            <p>\r\n                                Already have account?{\" \"}\r\n                                <a role=\"button\" onClick={toggleFormType}>\r\n                                    Sign In\r\n                                </a>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <h3 className=\"mb-4\">Login</h3>\r\n                            <LoginForm />\r\n                            <p>\r\n                                Dont have account?{\" \"}\r\n                                <a role=\"button\" onClick={toggleFormType}>\r\n                                    Sign Up\r\n                                </a>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/ui/navBar.jsx\";\r\nimport Users from \"./layouts/users\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./layouts/main\";\r\nimport Login from \"./layouts/login\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Main} />\r\n                <Route path=\"/users/:userId?/:edit?\" component={Users} />\r\n                <Route path=\"/login/:type?\" component={Login} />\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}