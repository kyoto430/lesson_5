{"version":3,"sources":["reportWebVitals.js","app/components/navBar.jsx","app/components/pagination.jsx","app/components/groupList.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/searchStatus.jsx","app/components/bookmark.jsx","app/components/quality.jsx","app/components/qualitiesList.jsx","app/components/tableHeader.jsx","app/components/tableBody.jsx","app/components/table.jsx","app/components/usersTable.jsx","app/components/userList.jsx","app/components/loader.jsx","app/components/userPage.jsx","app/components/searchBar.jsx","app/components/users.jsx","app/utils/paginate.js","app/components/main.jsx","app/components/textField.jsx","app/components/login.jsx","app/utils/validator.js","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","className","to","Pagination","itemsCount","pageSize","onPageChange","currentPage","console","log","pagesCount","Math","ceil","pages","_","range","map","page","onClick","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","Object","keys","item","role","defaultProps","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","professions","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","completedMeetings","rate","bookmark","API","fetchAll","Promise","resolve","window","setTimeout","getById","id","find","user","SearchStatus","length","number","lastOne","Number","toString","slice","indexOf","renderPhrase","BookMark","status","rest","Quality","QualitiesList","qual","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","path","order","column","undefined","scope","TableBody","data","renderContent","component","get","Table","children","UserTable","onToggleBookMark","onDelete","delete","UserList","Loader","UserPage","history","useHistory","useState","userById","setUserById","useEffect","quality","push","SearchBar","search","onItemSearch","type","value","onChange","placeholder","Users","userId","useParams","setCurrentPage","setProfession","selectedProf","setSelectedProf","sortBy","setSortBy","setUsers","setSearch","api","searchedUsers","filter","toLowerCase","includes","filteredUsers","JSON","stringify","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","e","target","pageIndex","Main","TextField","label","error","showPassword","setShowPassword","htmlFor","prevState","Login","email","password","setData","errors","setErrors","handleChange","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","isContainDigit","min","validate","config","validateMethod","statusValidate","trim","test","fieldName","validator","isValid","onSubmit","preventDefault","disabled","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d0ef2c6.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <ul className=\"nav\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                    Main Page\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/users\">\r\n                    Users\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n    console.log({ currentPage });\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    if (pagesCount === 1) return null;\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => (\r\n                    <li\r\n                        key={page}\r\n                        className={\r\n                            \"page-item \" +\r\n                            (page === currentPage ? \"active\" : \"\")\r\n                        }\r\n                    >\r\n                        <a\r\n                            className=\"page-link\"\r\n                            onClick={() => {\r\n                                onPageChange(page);\r\n                            }}\r\n                        >\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupList = ({\r\n    items,\r\n    valueProperty,\r\n    contentProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n}) => {\r\n    console.log(items);\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {!Array.isArray(items) &&\r\n                Object.keys(items).map((item) => (\r\n                    <li\r\n                        key={items[item][valueProperty]}\r\n                        className={\r\n                            \"list-group-item\" +\r\n                            (items[item] === selectedItem ? \" active\" : \"\")\r\n                        }\r\n                        onClick={() => onItemSelect(items[item])}\r\n                        role=\"button\"\r\n                    >\r\n                        {items[item][contentProperty]}\r\n                    </li>\r\n                ))}\r\n            {items.map((item) => (\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    className={\r\n                        \"list-group-item\" +\r\n                        (item === selectedItem ? \" active\" : \"\")\r\n                    }\r\n                    onClick={() => onItemSelect(item)}\r\n                    role=\"button\"\r\n                >\r\n                    {item[contentProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nGroupList.defaultProps = {\r\n    valueProperty: \"_id\",\r\n    contentProperty: \"name\"\r\n};\r\nGroupList.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.object\r\n};\r\nexport default GroupList;\r\n","export const professionsObject = {\r\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\r\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\r\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\r\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\r\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\r\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\r\n};\r\nexport const professions = [\r\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\r\n];\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(professions);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","import { professionsObject as professions } from \"./professions.api\";\r\nconst qualities = {\r\n    tedious: {\r\n        _id: \"67rdca3eeb7f6fgeed471198\",\r\n        name: \"Нудила\",\r\n        color: \"primary\"\r\n    },\r\n    strange: {\r\n        _id: \"67rdca3eeb7f6fgeed471100\",\r\n        name: \"Странный\",\r\n        color: \"secondary\"\r\n    },\r\n    buller: {\r\n        _id: \"67rdca3eeb7f6fgeed4711012\",\r\n        name: \"Троль\",\r\n        color: \"success\"\r\n    },\r\n    alcoholic: {\r\n        _id: \"67rdca3eeb7f6fgeed471101\",\r\n        name: \"Алкоголик\",\r\n        color: \"danger\"\r\n    },\r\n    handsome: {\r\n        _id: \"67rdca3eeb7f6fgeed471102\",\r\n        name: \"Красавчик\",\r\n        color: \"info\"\r\n    },\r\n    uncertain: {\r\n        _id: \"67rdca3eeb7f6fgeed471102\",\r\n        name: \"Неуверенный\",\r\n        color: \"dark\"\r\n    }\r\n};\r\n\r\nconst users = [\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471815\",\r\n        name: \"Джон Дориан\",\r\n        profession: professions.doctor,\r\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\r\n        completedMeetings: 36,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471816\",\r\n        name: \"Кокс\",\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\r\n        completedMeetings: 15,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471817\",\r\n        name: \"Боб Келсо\",\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller],\r\n        completedMeetings: 247,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471818\",\r\n        name: \"Рэйчел Грин\",\r\n        profession: professions.waiter,\r\n        qualities: [qualities.uncertain],\r\n        completedMeetings: 148,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471819\",\r\n        name: \"Шелдон Купер\",\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 37,\r\n        rate: 4.6,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471820\",\r\n        name: \"Леонард Хофстедтер\",\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 147,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471821\",\r\n        name: \"Говард Воловиц\",\r\n        profession: professions.engineer,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 72,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471822\",\r\n        name: \"Никола Тесла\",\r\n        profession: professions.engineer,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 72,\r\n        rate: 5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471823\",\r\n        name: \"Моника Геллер\",\r\n        profession: professions.cook,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471824\",\r\n        name: \"Рататуй\",\r\n        profession: professions.cook,\r\n        qualities: [qualities.handsome, qualities.buller],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed47181f\",\r\n        name: \"Джоуи Триббиани\",\r\n        profession: professions.actor,\r\n        qualities: [qualities.uncertain, qualities.strange],\r\n        completedMeetings: 434,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed47181r\",\r\n        name: \"Брэд Питт\",\r\n        profession: professions.actor,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 434,\r\n        rate: 5,\r\n        bookmark: false\r\n    }\r\n];\r\n\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(users);\r\n        }, 2000);\r\n    });\r\n\r\nconst getById = (id) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(users.find((user) => user._id === id));\r\n        }, 1000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll,\r\n    getById\r\n};\r\n","import users from \"./fake.api/user.api\";\r\nimport professions from \"./fake.api/professions.api\";\r\nconst API = {\r\n    users,\r\n    professions\r\n};\r\nexport default API;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst SearchStatus = ({ length }) => {\r\n    const renderPhrase = (number) => {\r\n        const lastOne = Number(number.toString().slice(-1));\r\n        if (number > 4 && number < 15) {\r\n            return \"человек тусанет\";\r\n        }\r\n        if (lastOne === 1) return \"человек тусанет\";\r\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\r\n        return \"человек тусанет\";\r\n    };\r\n    return (\r\n        <h2>\r\n            <span\r\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\r\n            >\r\n                {length > 0\r\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\r\n                    : \"Никто с тобой не тусанет\"}\r\n            </span>\r\n        </h2>\r\n    );\r\n};\r\nSearchStatus.propTypes = {\r\n    length: PropTypes.number\r\n};\r\n\r\nexport default SearchStatus;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst BookMark = ({ status, ...rest }) => {\r\n    return (\r\n        <button {...rest}>\r\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\r\n        </button>\r\n    );\r\n};\r\nBookMark.propTypes = {\r\n    status: PropTypes.bool\r\n};\r\n\r\nexport default BookMark;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Quality = ({ color, name, _id }) => {\r\n    return (\r\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\r\n            {name}\r\n        </span>\r\n    );\r\n};\r\nQuality.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Quality;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Quality from \"./quality\";\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n    return (\r\n        <>\r\n            {qualities.map((qual) => (\r\n                <Quality key={qual._id} {...qual} />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n    qualities: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ path: item, order: \"asc\" });\r\n        }\r\n    };\r\n    const renderSortArrow = (selectedSort, currentPath) => {\r\n        if (selectedSort.path === currentPath) {\r\n            if (selectedSort.order === \"asc\") {\r\n                return <i className=\"bi bi-caret-down-fill\"></i>;\r\n            } else {\r\n                return <i className=\"bi bi-caret-up-fill\"></i>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].path\r\n                                ? () => handleSort(columns[column].path)\r\n                                : undefined\r\n                        }\r\n                        {...{ role: columns[column].path && \"button\" }}\r\n                        scope=\"col\"\r\n                    >\r\n                        {columns[column].name}\r\n                        {renderSortArrow(selectedSort, columns[column].path)}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n    const renderContent = (item, column) => {\r\n        if (columns[column].component) {\r\n            const component = columns[column].component;\r\n            if (typeof component === \"function\") {\r\n                return component(item);\r\n            }\r\n            return component;\r\n        }\r\n        return _.get(item, columns[column].path);\r\n    };\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => (\r\n                <tr key={item._id}>\r\n                    {Object.keys(columns).map((column) => (\r\n                        <td key={column}>{renderContent(item, column)}</td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n    return (\r\n        <table className=\"table\">\r\n            {children || (\r\n                <>\r\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\r\n                    <TableBody {...{ columns, data }} />\r\n                </>\r\n            )}\r\n        </table>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    onSort: PropTypes.func,\r\n    selectedSort: PropTypes.object,\r\n    columns: PropTypes.object,\r\n    data: PropTypes.array,\r\n    children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookMark from \"./bookmark\";\r\nimport QualitiesList from \"./qualitiesList\";\r\nimport Table from \"./table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserTable = ({\r\n    users,\r\n    onSort,\r\n    selectedSort,\r\n    onToggleBookMark,\r\n    onDelete,\r\n    ...rest\r\n}) => {\r\n    const columns = {\r\n        name: {\r\n            path: \"name\",\r\n            name: \"Имя\",\r\n            component: (user) => (\r\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\r\n            )\r\n        },\r\n        qualities: {\r\n            name: \"Качества\",\r\n            component: (user) => <QualitiesList qualities={user.qualities} />\r\n        },\r\n        professions: { path: \"profession.name\", name: \"Профессия\" },\r\n        completedMeetings: {\r\n            path: \"completedMeetings\",\r\n            name: \"Встретился, раз\"\r\n        },\r\n        rate: { path: \"rate\", name: \"Оценка\" },\r\n        bookmark: {\r\n            path: \"bookmark\",\r\n            name: \"Избранное\",\r\n            component: (user) => (\r\n                <BookMark\r\n                    status={user.bookmark}\r\n                    onClick={() => onToggleBookMark(user._id)}\r\n                />\r\n            )\r\n        },\r\n        delete: {\r\n            component: (user) => (\r\n                <button\r\n                    onClick={() => onDelete(user._id)}\r\n                    className=\"btn btn-danger\"\r\n                >\r\n                    delete\r\n                </button>\r\n            )\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Table\r\n                onSort={onSort}\r\n                selectedSort={selectedSort}\r\n                columns={columns}\r\n                data={users}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nUserTable.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    onToggleBookMark: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport UserTable from \"./usersTable\";\r\nconst UserList = ({ ...rest }) => {\r\n    return <UserTable {...rest} />;\r\n};\r\n\r\nUserList.propTypes = {\r\n    users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return <h1>Loading...</h1>;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../api\";\r\nimport Quality from \"./quality\";\r\nimport Loader from \"./loader\";\r\n\r\nconst UserPage = ({ id }) => {\r\n    console.log(\"ID\", id);\r\n    const history = useHistory();\r\n    const [userById, setUserById] = useState({});\r\n    console.log(\"userById\", userById);\r\n    useEffect(() => {\r\n        API.users.getById(id).then((user) => {\r\n            setUserById(user);\r\n        });\r\n    }, []);\r\n    const handleAllUsers = () => {\r\n        history.push(\"/users\");\r\n    };\r\n    if (!userById?.name) {\r\n        return <Loader />;\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>{`Имя: ${userById.name}`}</h1>\r\n            <h2>{`Профессия: ${userById.profession.name}`}</h2>\r\n            {userById.qualities.map((quality) => (\r\n                <Quality key={quality._id} {...quality} />\r\n            ))}\r\n            <h6>{`completedMeetings: ${userById.completedMeetings}`}</h6>\r\n            <h2>{`Rate: ${userById.rate}`}</h2>\r\n            <button\r\n                onClick={() => {\r\n                    handleAllUsers();\r\n                }}\r\n            >\r\n                Все пользователи\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserPage.propTypes = {\r\n    id: PropTypes.string\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBar = ({ search, onItemSearch }) => {\r\n    return (\r\n        <>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Поиск</span>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    value={search}\r\n                    onChange={onItemSearch}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    search: PropTypes.string,\r\n    onItemSearch: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;\r\n","/* eslint-disable multiline-ternary */\r\n/* eslint-disable indent */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"./pagination\";\r\nimport GroupList from \"./groupList\";\r\nimport api from \"../api\";\r\nimport SearchStatus from \"./searchStatus\";\r\nimport _ from \"lodash\";\r\nimport UserList from \"./userList\";\r\nimport UserPage from \"./userPage\";\r\nimport { useParams } from \"react-router\";\r\nimport Loader from \"./loader\";\r\nimport SearchBar from \"./searchBar\";\r\n\r\nconst Users = () => {\r\n    const params = useParams();\r\n    const userId = params.userId;\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [professions, setProfession] = useState();\r\n    const [selectedProf, setSelectedProf] = useState();\r\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\r\n    const pageSize = 8;\r\n\r\n    const [users, setUsers] = useState();\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n        setSelectedProf();\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"send request users\");\r\n        api.users.fetchAll().then((data) => {\r\n            setUsers(data);\r\n        });\r\n    }, []);\r\n\r\n    const handleDelete = (userId) => {\r\n        setUsers(users.filter((user) => user._id !== userId));\r\n    };\r\n    const handleToggleBookMark = (id) => {\r\n        setUsers(\r\n            users.map((user) => {\r\n                if (user._id === id) {\r\n                    return { ...user, bookmark: !user.bookmark };\r\n                }\r\n                return user;\r\n            })\r\n        );\r\n        console.log(id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"send reqest professions\");\r\n        api.professions.fetchAll().then((data) => {\r\n            setProfession(data);\r\n        });\r\n        return () => {};\r\n    }, []);\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedProf]);\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [search]);\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n        console.log(\"page: \", pageIndex);\r\n    };\r\n    const handleProfessionSelect = (item) => {\r\n        console.log(\"prof select\", item);\r\n        setSelectedProf(item);\r\n        setSearch(\"\");\r\n    };\r\n    const handleSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n\r\n    if (users) {\r\n        const searchedUsers = users.filter((user) => {\r\n            return user.name.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n        const filteredUsers = selectedProf\r\n            ? users.filter(\r\n                  (user) =>\r\n                      JSON.stringify(user.profession) ===\r\n                      JSON.stringify(selectedProf)\r\n              )\r\n            : searchedUsers;\r\n\r\n        const count = filteredUsers.length;\r\n        const sortedUsers = _.orderBy(\r\n            filteredUsers,\r\n            [sortBy.path],\r\n            [sortBy.order]\r\n        );\r\n\r\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n        const clearFilter = () => {\r\n            setSelectedProf();\r\n        };\r\n        return userId ? (\r\n            <UserPage users={usersCrop} id={userId} />\r\n        ) : (\r\n            <div className=\"d-flex\">\r\n                {professions && (\r\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n                        <GroupList\r\n                            selectedItem={selectedProf}\r\n                            items={professions}\r\n                            onItemSelect={handleProfessionSelect}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-secondary mt-2\"\r\n                            onClick={clearFilter}\r\n                        >\r\n                            Очистить\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                <div className=\"d-flex flex-column\">\r\n                    <SearchStatus length={count} />\r\n                    <SearchBar search={search} onItemSearch={handleChange} />\r\n                    {count > 0 && (\r\n                        <UserList\r\n                            users={usersCrop}\r\n                            onSort={handleSort}\r\n                            selectedSort={sortBy}\r\n                            onDelete={handleDelete}\r\n                            onToggleBookMark={handleToggleBookMark}\r\n                        />\r\n                    )}\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            itemsCount={count}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <Loader />;\r\n};\r\nUsers.propTypes = {\r\n    users: PropTypes.array,\r\n    match: PropTypes.object\r\n};\r\n\r\nexport default Users;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n    return <h1>Main page</h1>;\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    type={showPassword ? \"text\" : type}\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={getInputClasses()}\r\n                />\r\n                {type === \"password\" && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <i\r\n                            className={\r\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\r\n                            }\r\n                        ></i>\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextField.defaultProps = {\r\n    type: \"text\"\r\n};\r\n\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"./textField\";\r\nimport { validator } from \"../utils/validator\";\r\n\r\nconst Login = () => {\r\n    const [data, setData] = useState({ email: \"\", password: \"\" });\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = ({ target }) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    <h3 className=\"mb-4\">Login</h3>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            label=\"Электронная почта\"\r\n                            name=\"email\"\r\n                            value={data.email}\r\n                            onChange={handleChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextField\r\n                            label=\"Пароль\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={data.password}\r\n                            onChange={handleChange}\r\n                            error={errors.password}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={!isValid}\r\n                            className=\"btn btn-primary w-100 mx-auto\"\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","/* eslint-disable indent */\r\nexport function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n            case \"isRequired\":\r\n                statusValidate = data.trim() === \"\";\r\n                break;\r\n            case \"isEmail\": {\r\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n                statusValidate = !emailRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isCapitalSymbol\": {\r\n                const capitalRegExp = /[A-Z]+/g;\r\n                statusValidate = !capitalRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isContainDigit\": {\r\n                const digitRegExp = /\\d+/g;\r\n                statusValidate = !digitRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"min\": {\r\n                statusValidate = data.length < config.value;\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"./components/navBar\";\r\nimport Users from \"./components/users\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./components/main\";\r\nimport Login from \"./components/login\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Main} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/users/:userId?\" component={Users} />\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}