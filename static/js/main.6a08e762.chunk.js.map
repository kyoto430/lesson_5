{"version":3,"sources":["reportWebVitals.js","app/components/ui/navBar.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/index.js","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/userList.jsx","app/components/common/loader.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/ui/searchBar.jsx","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/utils/validator.js","app/components/common/form/editForm.jsx","app/components/page/editPage/index.js","app/components/page/editPage/editPage.jsx","app/layouts/users.jsx","app/utils/paginate.js","app/layouts/main.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","className","to","Pagination","itemsCount","pageSize","onPageChange","currentPage","console","log","pagesCount","Math","ceil","pages","_","range","map","page","onClick","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","Object","keys","item","role","defaultProps","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","professions","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","API","parse","getById","id","find","user","update","data","userIndex","findIndex","u","SearchStatus","length","number","lastOne","Number","toString","slice","indexOf","renderPhrase","BookMark","status","rest","Quality","Qualities","quality","qual","TableBody","columns","renderContent","column","component","get","path","TableHeader","onSort","selectedSort","renderSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","delete","UserList","Loader","UserPage","userId","useParams","history","useHistory","useState","userById","setUserById","useEffect","goBack","SearchBar","search","onItemSearch","type","value","onChange","placeholder","TextField","label","error","showPassword","setShowPassword","htmlFor","target","prevState","SelectField","defaultOption","options","optionsArray","optionName","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","closeMenuOnSelect","isMulti","classNamePrefix","validator","config","errors","validate","validateMethod","statusValidate","trim","test","message","fieldName","EditForm","setData","setQualities","setProfessions","setErrors","api","validatorConfig","isRequired","min","isEmail","isValid","onSubmit","e","preventDefault","filter","qualityIds","updatedQualities","values","includes","updatedData","EditPage","setUser","Users","edit","setCurrentPage","setProfession","selectedProf","setSelectedProf","sortBy","setSortBy","setUsers","setSearch","searchedUsers","toLowerCase","filteredUsers","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","pageIndex","Main","CheckBoxField","LoginForm","password","stayOn","isCapitalSymbol","isContainDigit","RegisterForm","licence","Login","formType","setFormType","toggleFormType","params","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a08e762.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <ul className=\"nav\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                    Main Page\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/users\">\r\n                    Users\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n    console.log({ currentPage });\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    if (pagesCount === 1) return null;\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => (\r\n                    <li\r\n                        key={page}\r\n                        className={\r\n                            \"page-item \" +\r\n                            (page === currentPage ? \"active\" : \"\")\r\n                        }\r\n                    >\r\n                        <a\r\n                            className=\"page-link\"\r\n                            onClick={() => {\r\n                                onPageChange(page);\r\n                            }}\r\n                        >\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupList = ({\r\n    items,\r\n    valueProperty,\r\n    contentProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n}) => {\r\n    console.log(items);\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {!Array.isArray(items) &&\r\n                Object.keys(items).map((item) => (\r\n                    <li\r\n                        key={items[item][valueProperty]}\r\n                        className={\r\n                            \"list-group-item\" +\r\n                            (items[item] === selectedItem ? \" active\" : \"\")\r\n                        }\r\n                        onClick={() => onItemSelect(items[item])}\r\n                        role=\"button\"\r\n                    >\r\n                        {items[item][contentProperty]}\r\n                    </li>\r\n                ))}\r\n            {items.map((item) => (\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    className={\r\n                        \"list-group-item\" +\r\n                        (item === selectedItem ? \" active\" : \"\")\r\n                    }\r\n                    onClick={() => onItemSelect(item)}\r\n                    role=\"button\"\r\n                >\r\n                    {item[contentProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nGroupList.defaultProps = {\r\n    valueProperty: \"_id\",\r\n    contentProperty: \"name\"\r\n};\r\nGroupList.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.object\r\n};\r\nexport default GroupList;\r\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professions);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"johndorian@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"koks@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bobkelso@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"rachelgreene@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"sheldoncooper@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"leonardhofstedter@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"howardwolowitz@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"nikolatesla@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"monicageller@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatouille@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joeytribbiani@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"bradpitt@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nconst API = {\n    users,\n    professions,\n    qualities\n};\nexport default API;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst SearchStatus = ({ length }) => {\r\n    const renderPhrase = (number) => {\r\n        const lastOne = Number(number.toString().slice(-1));\r\n        if (number > 4 && number < 15) {\r\n            return \"человек тусанет\";\r\n        }\r\n        if (lastOne === 1) return \"человек тусанет\";\r\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\r\n        return \"человек тусанет\";\r\n    };\r\n    return (\r\n        <h2>\r\n            <span\r\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\r\n            >\r\n                {length > 0\r\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\r\n                    : \"Никто с тобой не тусанет\"}\r\n            </span>\r\n        </h2>\r\n    );\r\n};\r\nSearchStatus.propTypes = {\r\n    length: PropTypes.number\r\n};\r\n\r\nexport default SearchStatus;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst BookMark = ({ status, ...rest }) => {\r\n    return (\r\n        <button {...rest}>\r\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\r\n        </button>\r\n    );\r\n};\r\nBookMark.propTypes = {\r\n    status: PropTypes.bool\r\n};\r\n\r\nexport default BookMark;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Quality = ({ color, name, _id }) => {\r\n    return (\r\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\r\n            {name}\r\n        </span>\r\n    );\r\n};\r\nQuality.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Quality;\r\n","import Qualities from \"./qualitiesList\";\r\nexport default Qualities;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Quality from \"./quality\";\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n    return (\r\n        <>\r\n            {!Array.isArray(qualities) &&\r\n                Object.keys(qualities).map((quality) => (\r\n                    <Quality key={qualities[quality]._id} {...quality} />\r\n                ))}\r\n            {qualities.map((qual) => (\r\n                <Quality key={qual._id} {...qual} />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n    qualities: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n    const renderContent = (item, column) => {\r\n        if (columns[column].component) {\r\n            const component = columns[column].component;\r\n            if (typeof component === \"function\") {\r\n                return component(item);\r\n            }\r\n            return component;\r\n        }\r\n        return _.get(item, columns[column].path);\r\n    };\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => (\r\n                <tr key={item._id}>\r\n                    {Object.keys(columns).map((column) => (\r\n                        <td key={column}>{renderContent(item, column)}</td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ path: item, order: \"asc\" });\r\n        }\r\n    };\r\n    const renderSortArrow = (selectedSort, currentPath) => {\r\n        if (selectedSort.path === currentPath) {\r\n            if (selectedSort.order === \"asc\") {\r\n                return <i className=\"bi bi-caret-down-fill\"></i>;\r\n            } else {\r\n                return <i className=\"bi bi-caret-up-fill\"></i>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].path\r\n                                ? () => handleSort(columns[column].path)\r\n                                : undefined\r\n                        }\r\n                        {...{ role: columns[column].path && \"button\" }}\r\n                        scope=\"col\"\r\n                    >\r\n                        {columns[column].name}\r\n                        {renderSortArrow(selectedSort, columns[column].path)}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport Table from \"./table\";\r\nexport { TableBody, TableHeader };\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n    return (\r\n        <table className=\"table\">\r\n            {children || (\r\n                <>\r\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\r\n                    <TableBody {...{ columns, data }} />\r\n                </>\r\n            )}\r\n        </table>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    onSort: PropTypes.func,\r\n    selectedSort: PropTypes.object,\r\n    columns: PropTypes.object,\r\n    data: PropTypes.array,\r\n    children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookMark from \"../common/bookmark\";\r\nimport Qualities from \"./qualities\";\r\nimport Table from \"../common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserTable = ({\r\n    users,\r\n    onSort,\r\n    selectedSort,\r\n    onToggleBookMark,\r\n    onDelete,\r\n    ...rest\r\n}) => {\r\n    const columns = {\r\n        name: {\r\n            path: \"name\",\r\n            name: \"Имя\",\r\n            component: (user) => (\r\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\r\n            )\r\n        },\r\n        qualities: {\r\n            name: \"Качества\",\r\n            component: (user) => <Qualities qualities={user.qualities} />\r\n        },\r\n        professions: { path: \"profession.name\", name: \"Профессия\" },\r\n        completedMeetings: {\r\n            path: \"completedMeetings\",\r\n            name: \"Встретился, раз\"\r\n        },\r\n        rate: { path: \"rate\", name: \"Оценка\" },\r\n        bookmark: {\r\n            path: \"bookmark\",\r\n            name: \"Избранное\",\r\n            component: (user) => (\r\n                <BookMark\r\n                    status={user.bookmark}\r\n                    onClick={() => onToggleBookMark(user._id)}\r\n                />\r\n            )\r\n        },\r\n        delete: {\r\n            component: (user) => (\r\n                <button\r\n                    onClick={() => onDelete(user._id)}\r\n                    className=\"btn btn-danger\"\r\n                >\r\n                    delete\r\n                </button>\r\n            )\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Table\r\n                onSort={onSort}\r\n                selectedSort={selectedSort}\r\n                columns={columns}\r\n                data={users}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nUserTable.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    onToggleBookMark: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import UserList from \"./userList\";\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport UserTable from \"../../ui/usersTable\";\r\nconst UserList = ({ ...rest }) => {\r\n    return <UserTable {...rest} />;\r\n};\r\n\r\nUserList.propTypes = {\r\n    users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return <h1>Loading...</h1>;\r\n};\r\n\r\nexport default Loader;\r\n","import UserPage from \"./userPage\";\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../../../api\";\r\nimport Qualities from \"../../ui/qualities/index\";\r\nimport Loader from \"../../common/loader\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserPage = () => {\r\n    const { userId } = useParams();\r\n    const history = useHistory();\r\n    const [userById, setUserById] = useState();\r\n    console.log(\"userById\", userById);\r\n    useEffect(() => {\r\n        API.users.getById(userId).then((user) => {\r\n            setUserById(user);\r\n        });\r\n    }, []);\r\n    const handleAllUsers = () => {\r\n        history.goBack();\r\n    };\r\n    if (!userById?.name) {\r\n        return <Loader />;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{`Имя: ${userById.name}`}</h1>\r\n                <h2>{`Профессия: ${userById.profession.name}`}</h2>\r\n                <Qualities key={userById._id} {...userById} />\r\n                <h6>{`completedMeetings: ${userById.completedMeetings}`}</h6>\r\n                <h2>{`Rate: ${userById.rate}`}</h2>\r\n                <button\r\n                    className=\"btn btn-secondary m-2\"\r\n                    onClick={() => {\r\n                        handleAllUsers();\r\n                    }}\r\n                >\r\n                    Все пользователи\r\n                </button>\r\n                <Link to={`/users/${userById._id}/edit`}>\r\n                    <button className=\"btn btn-primary\">Редактировать</button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nUserPage.propTypes = {\r\n    id: PropTypes.string\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBar = ({ search, onItemSearch }) => {\r\n    return (\r\n        <>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Поиск</span>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    value={search}\r\n                    onChange={onItemSearch}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    search: PropTypes.string,\r\n    onItemSearch: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    type={showPassword ? \"text\" : type}\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={getInputClasses()}\r\n                />\r\n                {type === \"password\" && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <i\r\n                            className={\r\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\r\n                            }\r\n                        ></i>\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextField.defaultProps = {\r\n    type: \"text\"\r\n};\r\n\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","/* eslint-disable indent */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error\r\n}) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  name: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                className={getInputClasses()}\r\n                id=\"validationCustom04\"\r\n                name=\"profession\"\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray &&\r\n                    optionsArray.map((option) => (\r\n                        <option value={option._id} key={option._id}>\r\n                            {option.name}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectField.propTypes = {\r\n    defaultOption: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={option.name + \"_\" + option.value}\r\n                        className=\"form-check form-check-inline\"\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={option.name + \"_\" + option.value}\r\n                            value={option.value}\r\n                            checked={option.value === value}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={option.name + \"_\" + option.value}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRadioField.propTypes = {\r\n    options: PropTypes.array,\r\n    name: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","/* eslint-disable indent */\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiSelectField = ({\r\n    options,\r\n    onChange,\r\n    name,\r\n    label,\r\n    defaultOption,\r\n    defaultValue\r\n}) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  label: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n    const handleChange = (value) => {\r\n        onChange({ name: name, value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <Select\r\n                closeMenuOnSelect={false}\r\n                isMulti\r\n                options={optionsArray}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n                placeholder={defaultOption}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultOption: PropTypes.string,\r\n    defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","/* eslint-disable indent */\r\nexport function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n            case \"isRequired\": {\r\n                if (typeof data === \"boolean\") {\r\n                    statusValidate = !data;\r\n                } else {\r\n                    statusValidate = data.trim() === \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"isEmail\": {\r\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n                statusValidate = !emailRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isCapitalSymbol\": {\r\n                const capitalRegExp = /[A-Z]+/g;\r\n                statusValidate = !capitalRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isContainDigit\": {\r\n                const digitRegExp = /\\d+/g;\r\n                statusValidate = !digitRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"min\": {\r\n                statusValidate = data.length < config.value;\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport api from \"../../../api\";\r\nimport TextField from \"./textField\";\r\nimport SelectField from \"./selectField\";\r\nimport RadioField from \"./radioField\";\r\nimport MultiSelectField from \"./multiSelectField\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst EditForm = ({ user }) => {\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        name: user.name,\r\n        email: user.email || \"\",\r\n        profession: user.profession._id,\r\n        sex: user.sex || \"male\",\r\n        qualities: user.qualities.map((quality) => ({\r\n            value: quality._id,\r\n            label: quality.name\r\n        }))\r\n    });\r\n\r\n    const [qualities, setQualities] = useState();\r\n    const [professions, setProfessions] = useState();\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        api.professions.fetchAll().then((data) => setProfessions(data));\r\n        api.qualities.fetchAll().then((data) => setQualities(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Имя обязателено для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Имя должно содержать не менее 3 символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен не корректно\"\r\n            }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: \"Пoле выбора профессии обязателено для заполнения\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n\r\n        const [profession] = professions.filter(\r\n            (profession) => profession._id === data.profession\r\n        );\r\n        const qualityIds = data.qualities.map((quality) => quality.value);\r\n        const updatedQualities = Object.values(qualities).filter((quality) =>\r\n            qualityIds.includes(quality._id)\r\n        );\r\n        const updatedData = {\r\n            ...data,\r\n            profession,\r\n            qualities: updatedQualities\r\n        };\r\n        api.users.update(user._id, updatedData);\r\n\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Редактировать</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Имя\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <TextField\r\n                    label=\"Электронная почта\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    error={errors.email}\r\n                />\r\n                <SelectField\r\n                    onChange={handleChange}\r\n                    options={professions}\r\n                    defaultOption=\"Choose...\"\r\n                    error={errors.profession}\r\n                    value={data.profession}\r\n                    label=\"Выбери свою профессию\"\r\n                />\r\n                <RadioField\r\n                    options={[\r\n                        { name: \"Male\", value: \"male\" },\r\n                        { name: \"Female\", value: \"female\" },\r\n                        { name: \"Other\", value: \"other\" }\r\n                    ]}\r\n                    value={data.sex}\r\n                    name=\"sex\"\r\n                    onChange={handleChange}\r\n                    label=\"Выберите ваш пол\"\r\n                />\r\n                <MultiSelectField\r\n                    name=\"qualities\"\r\n                    label=\"Выберите качества\"\r\n                    defaultOption=\"Выбрать...\"\r\n                    defaultValue={data.qualities}\r\n                    options={qualities}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary w-100 mx-auto\"\r\n                    disabled={!isValid || !professions}\r\n                >\r\n                    Обновить\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nEditForm.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default EditForm;\r\n","import EditPage from \"./editPage\";\r\n\r\nexport default EditPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport api from \"../../../api\";\r\nimport EditForm from \"../../common/form/editForm\";\r\nimport Loader from \"../../common/loader\";\r\n\r\nconst EditPage = () => {\r\n    const { userId } = useParams();\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {\r\n        api.users.getById(userId).then((data) => setUser(data));\r\n    }, []);\r\n\r\n    return <>{user ? <EditForm user={user} /> : <Loader />}</>;\r\n};\r\n\r\nexport default EditPage;\r\n","/* eslint-disable multiline-ternary */\r\n/* eslint-disable indent */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"../components/common/pagination\";\r\nimport GroupList from \"../components/common/groupList\";\r\nimport api from \"../api\";\r\nimport SearchStatus from \"../components/ui/searchStatus\";\r\nimport _ from \"lodash\";\r\nimport UserList from \"../components/page/usersListPage\";\r\nimport UserPage from \"../components/page/userPage\";\r\nimport { useParams } from \"react-router\";\r\nimport Loader from \"../components/common/loader\";\r\nimport SearchBar from \"../components/ui/searchBar\";\r\nimport EditPage from \"../components/page/editPage/index\";\r\n\r\nconst Users = () => {\r\n    const { userId, edit } = useParams();\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [professions, setProfession] = useState();\r\n    const [selectedProf, setSelectedProf] = useState();\r\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\r\n    const pageSize = 8;\r\n\r\n    const [users, setUsers] = useState();\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n        setSelectedProf();\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"send request users\");\r\n        api.users.fetchAll().then((data) => {\r\n            setUsers(data);\r\n        });\r\n    }, []);\r\n\r\n    const handleDelete = (userId) => {\r\n        setUsers(users.filter((user) => user._id !== userId));\r\n    };\r\n    const handleToggleBookMark = (id) => {\r\n        setUsers(\r\n            users.map((user) => {\r\n                if (user._id === id) {\r\n                    return { ...user, bookmark: !user.bookmark };\r\n                }\r\n                return user;\r\n            })\r\n        );\r\n        console.log(id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"send reqest professions\");\r\n        api.professions.fetchAll().then((data) => {\r\n            setProfession(data);\r\n        });\r\n        return () => {};\r\n    }, []);\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedProf]);\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [search]);\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n        console.log(\"page: \", pageIndex);\r\n    };\r\n    const handleProfessionSelect = (item) => {\r\n        console.log(\"prof select\", item);\r\n        setSelectedProf(item);\r\n        setSearch(\"\");\r\n    };\r\n    const handleSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n\r\n    if (users) {\r\n        const searchedUsers = users.filter((user) => {\r\n            return user.name.toLowerCase().includes(search.toLowerCase());\r\n        });\r\n        const filteredUsers = selectedProf\r\n            ? users.filter(\r\n                  (user) =>\r\n                      JSON.stringify(user.profession) ===\r\n                      JSON.stringify(selectedProf)\r\n              )\r\n            : searchedUsers;\r\n\r\n        const count = filteredUsers.length;\r\n        const sortedUsers = _.orderBy(\r\n            filteredUsers,\r\n            [sortBy.path],\r\n            [sortBy.order]\r\n        );\r\n\r\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n        const clearFilter = () => {\r\n            setSelectedProf();\r\n        };\r\n        return (\r\n            <>\r\n                {userId && edit ? (\r\n                    <EditPage />\r\n                ) : userId ? (\r\n                    <UserPage />\r\n                ) : (\r\n                    <div className=\"d-flex\">\r\n                        {professions && (\r\n                            <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n                                <GroupList\r\n                                    selectedItem={selectedProf}\r\n                                    items={professions}\r\n                                    onItemSelect={handleProfessionSelect}\r\n                                />\r\n                                <button\r\n                                    className=\"btn btn-secondary mt-2\"\r\n                                    onClick={clearFilter}\r\n                                >\r\n                                    Очистить\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"d-flex flex-column\">\r\n                            <SearchStatus length={count} />\r\n                            <SearchBar\r\n                                search={search}\r\n                                onItemSearch={handleChange}\r\n                            />\r\n                            {count > 0 && (\r\n                                <UserList\r\n                                    users={usersCrop}\r\n                                    onSort={handleSort}\r\n                                    selectedSort={sortBy}\r\n                                    onDelete={handleDelete}\r\n                                    onToggleBookMark={handleToggleBookMark}\r\n                                />\r\n                            )}\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Pagination\r\n                                    itemsCount={count}\r\n                                    pageSize={pageSize}\r\n                                    currentPage={currentPage}\r\n                                    onPageChange={handlePageChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n    return <Loader />;\r\n};\r\nUsers.propTypes = {\r\n    users: PropTypes.array,\r\n    match: PropTypes.object\r\n};\r\n\r\nexport default Users;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n    return <h1>Main page</h1>;\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n    const handleChange = () => {\r\n        onChange({ name: name, value: !value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"form-check mb-4\">\r\n            <input\r\n                className={getInputClasses()}\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id={name}\r\n                onChange={handleChange}\r\n                checked={value}\r\n            />\r\n            <label className=\"form-check-label \" htmlFor=\"flexCheckDefault\">\r\n                {children}\r\n            </label>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]),\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\nimport TextField from \"../common/form/textField\";\r\n\r\nconst LoginForm = () => {\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        stayOn: false\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n                value={data.stayOn}\r\n                onChange={handleChange}\r\n                name=\"stayOn\"\r\n            >\r\n                Оставаться в системе\r\n            </CheckBoxField>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport api from \"../../api\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport RadioField from \"../common/form/radioField\";\r\nimport MultiSelectField from \"../common/form/multiSelectField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\n\r\nconst RegisterForm = () => {\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        profession: \"\",\r\n        sex: \"male\",\r\n        qualities: [],\r\n        licence: false\r\n    });\r\n    const [qualities, setQualities] = useState({});\r\n    const [professions, setProfession] = useState();\r\n    const [errors, setErrors] = useState({});\r\n    useEffect(() => {\r\n        console.log(\"send reqest professions\");\r\n        api.professions.fetchAll().then((data) => {\r\n            setProfession(data);\r\n        });\r\n        api.qualities.fetchAll().then((data) => {\r\n            setQualities(data);\r\n        });\r\n        return () => {};\r\n    }, []);\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: \"Обязательно выберите вашу профессию\"\r\n            }\r\n        },\r\n        licence: {\r\n            isRequired: {\r\n                message:\r\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <SelectField\r\n                onChange={handleChange}\r\n                options={professions}\r\n                defaultOption=\"Choose...\"\r\n                error={errors.profession}\r\n                value={data.profession}\r\n                label=\"Выбери свою профессию\"\r\n            />\r\n            <RadioField\r\n                options={[\r\n                    { name: \"Male\", value: \"male\" },\r\n                    { name: \"Female\", value: \"female\" },\r\n                    { name: \"Other\", value: \"other\" }\r\n                ]}\r\n                value={data.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"ВЫьеретие ваш пол\"\r\n            />\r\n            <MultiSelectField\r\n                options={qualities}\r\n                onChange={handleChange}\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n            />\r\n            <CheckBoxField\r\n                value={data.licence}\r\n                onChange={handleChange}\r\n                name=\"licence\"\r\n                error={errors.licence}\r\n            >\r\n                Подтвердить <a>лицензионное соглашение</a>\r\n            </CheckBoxField>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","/* eslint-disable multiline-ternary */\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport LoginForm from \"../components/ui/loginForm\";\r\nimport RegisterForm from \"../components/ui/registerForm\";\r\n\r\nconst Login = () => {\r\n    const { type } = useParams();\r\n    const [formType, setFormType] = useState(\r\n        type === \"register\" ? type : \"login\"\r\n    );\r\n    const toggleFormType = (params) => {\r\n        setFormType((prevState) =>\r\n            prevState === \"register\" ? \"login\" : \"register\"\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {formType === \"register\" ? (\r\n                        <>\r\n                            <h3 className=\"mb-4\">Register</h3>\r\n                            <RegisterForm />\r\n                            <p>\r\n                                Already have account?{\" \"}\r\n                                <a role=\"button\" onClick={toggleFormType}>\r\n                                    Sign In\r\n                                </a>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <h3 className=\"mb-4\">Login</h3>\r\n                            <LoginForm />\r\n                            <p>\r\n                                Dont have account?{\" \"}\r\n                                <a role=\"button\" onClick={toggleFormType}>\r\n                                    Sign Up\r\n                                </a>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/ui/navBar.jsx\";\r\nimport Users from \"./layouts/users\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./layouts/main\";\r\nimport Login from \"./layouts/login\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Main} />\r\n                <Route path=\"/users/:userId?/:edit?\" component={Users} />\r\n                <Route path=\"/login/:type?\" component={Login} />\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}